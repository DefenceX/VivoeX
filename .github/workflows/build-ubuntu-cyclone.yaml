name: "Build Ubuntu : Cyclone"

on:
  push:
    branches: main
  pull_request:
    branches: main

permissions:
  contents: read
  pull-requests: read

jobs:
  build-ubuntu-cyclone:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: Apt Update
        run: sudo apt-get update

      - name: Apt Install
        run: |
          sudo apt-get --no-install-recommends install catch rpm libgtk-3-dev valgrind libcairo2-dev libpango1.0-dev libxt-dev libxml2-dev ncurses-dev libxext-dev libswscale-dev libprotobuf-c-dev geographiclib-doc libgeographic-dev libasio-dev libtinyxml2-dev gradle libgeographic-dev libprotobuf-dev protobuf-compiler autoconf automake libtool curl make g++ unzip

      - name: CMake and Build
        run: mkdir build && cd build && cmake .. -DDDS=CYCLONE .. && make -j ${nproc}

      - name: Package for Debian (.deb)
        run: cd build && cpack -G DEB && echo "DEB_PACKAGE=$(ls *.deb)" >> $GITHUB_ENV 

      - name: Package for CentOS (.rpm)
        run: cd build && cpack -G RPM && echo "RPM_PACKAGE=$(ls *.rpm)" >> $GITHUB_ENV 

      # - name: CTest
      #   run: xvfb-run --server-args="-screen 0 1024x768x24" ctest -T memcheck

      - name: Post
        run: cd .. && bash <(curl -s https://codecov.io/bash)

      - name: Archive packaged .deb
        uses: actions/upload-artifact@v3
        with:
          name: ${{ env.DEB_PACKAGE }}
          path: build/${{ env.DEB_PACKAGE }}
          retention-days: 30

      - name: Archive packaged .rpm 
        uses: actions/upload-artifact@v3
        with:
          name: ${{ env.RPM_PACKAGE }}
          path: build/${{ env.RPM_PACKAGE }}
          retention-days: 30
