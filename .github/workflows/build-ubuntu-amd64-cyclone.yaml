name: "Build Ubuntu Intel : Cyclone"

on:
  push:
    branches: main
  pull_request:
    branches: main

permissions:
  contents: read
  pull-requests: read

jobs:
  build-ubuntu-cyclone:
    runs-on: ubuntu-22.04

    # Map a step output to a job output
    outputs:
      package_name: ${{ steps.package.outputs.DEB_PACKAGE }}
    steps:
      - uses: actions/checkout@v3
      - name: Apt Update
        run: sudo apt-get update

      - name: Apt Install
        run: |
          sudo apt-get --no-install-recommends install catch cpplint rpm libgtk-3-dev valgrind libcairo2-dev \
            libpango1.0-dev libxt-dev libxml2-dev ncurses-dev libxext-dev gtk-doc-tools libswscale-dev libprotobuf-c-dev \
            geographiclib-doc libgeographic-dev libgeographic-dev libprotobuf23 libprotobuf-dev \
            protobuf-compiler autoconf automake libtool curl make g++ unzip lsb-release graphviz \
            lttng-tools lttng-modules-dkms liblttng-ust-dev liblttng-ctl-dev -y

      - name: CMake and Build
        run: mkdir build && cd build && cmake .. -DDDS=CYCLONE-CE .. && make -j $(nproc)

      - name: Package for Debian (.deb)
        id: package
        run: cd build && cpack -V -G DEB && echo "DEB_PACKAGE=$(ls *.deb)" >> $GITHUB_ENV && echo "DEB_PACKAGE=$(ls *.deb)" >> $GITHUB_OUTPUT

      # - name: CTestDEB_PACKAGE
      #   run: xvfb-run --server-args="-screen 0 1024x768x24" ctest -T memcheck

      - name: Post
        run: cd .. && bash <(curl -s https://codecov.io/bash)

      - name: Archive packaged .deb
        uses: actions/upload-artifact@v3
        with:
          name: ${{ env.DEB_PACKAGE }}
          path: build/${{ env.DEB_PACKAGE }}
          retention-days: 30

      - name: Archive logs
        if: ${{ always() && !cancelled() }}
        uses: actions/upload-artifact@v3
        with:
          name: build-logs
          path: |
            build/_CPack_Packages/Linux/RPM/PreinstallOutput.log
            build/compile_commands.json
            build/external/libnmea/build/CMakeFiles/CMakeOutput.log
            build/external/cyclonedds/build/CMakeFiles/CMakeOutput.log
            build/external/cyclonedds-cxx/build/CMakeFiles/CMakeOutput.log
            build/CMakeFiles/CMakeOutput.log
          retention-days: 30

  install-ubuntu-cyclone:
    runs-on: ubuntu-22.04
    needs: [build-ubuntu-cyclone]
    if: ${{ always() && contains(join(needs.*.result, ','), 'success') }}

    steps:
      - name: Read package name
        run: echo ${{needs.build-ubuntu-cyclone.outputs.package_name}}

      - name: Download .deb to install
        uses: actions/download-artifact@v3
        with:
          name: ${{needs.build-ubuntu-cyclone.outputs.package_name}}

      - name: Install package
        run: sudo apt-get update && sudo apt-get install ./*.deb -y

      - name: Run binary
        run: /opt/gva/hmi/hmi-display -h
