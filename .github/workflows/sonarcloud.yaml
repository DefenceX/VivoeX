name: SonarCloud
on:
  push:
    branches:
      - main
  pull_request:
    types: [opened, synchronize, reopened]
jobs:
  build:
    name: Build and analyze
    runs-on: ubuntu-latest
    env:
      BUILD_WRAPPER_OUT_DIR: build_wrapper_output_directory # Directory where build-wrapper output will be placed
    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0 # Shallow clones should be disabled for a better relevancy of analysis
      - name: Install sonar-scanner and build-wrapper
        uses: SonarSource/sonarcloud-github-c-cpp@v1
      - name: Apt Update
        run: sudo apt-get update
      - name: Apt Install
        run: |
          sudo apt-get --no-install-recommends install catch cpplint rpm libgtk-3-dev valgrind libcairo2-dev \
            libpango1.0-dev libxt-dev libxml2-dev ncurses-dev libxext-dev libswscale-dev libprotobuf-c-dev \
            geographiclib-doc libgeographic-dev libgeographic-dev libprotobuf23 libprotobuf-dev \
            protobuf-compiler autoconf automake libtool curl make g++ unzip lsb-release tree graphviz gcovr \
            lttng-tools lttng-modules-dkms liblttng-ust-dev liblttng-ctl-dev -y
      - name: Run build-wrapper
        run: |
          tree -L 3 -d
          cmake -S . -B build
          build-wrapper-linux-x86-64 --out-dir ${{ env.BUILD_WRAPPER_OUT_DIR }} cmake --build ./build/ --config Release
      - name: Run tests to generate coverage statistics
        run: |
          sudo touch /var/log/gva.log && \
          sudo chmod a+rw /var/log/gva.log && \
          ./build/bin/test_log
      - name: Collect coverage into one XML report
        run: |
          gcovr --sonarqube > coverage.xml
      - name: Run sonar-scanner
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
        run: |
          sonar-scanner \
          --define sonar.cfamily.build-wrapper-output="${{ env.BUILD_WRAPPER_OUT_DIR }}" \
          --define sonar.coverageReportPaths=coverage.xml \
          --define sonar.cfamily.cache.enabled=false \
          --define sonar.python.version=3
