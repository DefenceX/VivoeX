/*! \mainpage User Manual
 *
 * \section sec1 Developer SDK Guide
 * This VIVOE (Vetronics Infrastructure for Video Over Ethernet) environment is currently tested on Ubuntu 22.04 LTS. 
 * Please ensure you have the following packages installed prior to building the application:
 * \subsection ssec11 Ubuntu 22.04
 * 
 * \code $ sudo apt install libcairo2-dev libxt-dev doxygen libxml2-dev ncurses-dev libxext-dev libswscale-dev \endcode
 * 
 * \subsection ssec12 CentOS 8
 * 
 * On CentOS there are a few additional repos required for the software to build these are epel-release and powertools, below are the settings to set these prior to installing the dependencies
 * \code 
 * $ dnf install epel-release -y
 * $ dnf config-manager --set-enabled powertools -y
 * $ dnf localinstall --nogpgcheck https://download1.rpmfusion.org/free/el/rpmfusion-free-release-8.noarch.rpm -y
 * $ dnf update -y
 * \endcode
 * Once the repos are updated install the following packages.
 * \code
 * $ dnf install cmake gcc-c++ cairo-devel libXt-devel doxygen libxml2-devel ncurses-devel libXext-devel ffmpeg-libs protobuf-devel protobuf-compiler GeographicLib-devel gtk3-devel -y
 * \endcode
 *
 * \section sec2 Building
 * This project has a couple of options that can be specified at compile time:
 *
 * \code $ cmake -DCMAKE_BUILD_TYPE=Debug -DENABLE_COVERAGE=ON -DENABLE_OSMSCOUT=ON -DDDS=CYCLONE-CE ..\endcode
 *
 *Default DDS stack is currently CycloneDDS (default if not specified) but can also be built with Opensplice by setting -DDDS=OSPL-CE.
 *
 *To enable code coverage reports set ENABLE_COVERAGE. The gdb debugger is avaiable and configured for use with Microsoft Visual Code and the workspace files are part of the repo (recommended for developers).
 *
 *The BMS function can be configured with Open Street Maps but these need to be compiled and installed onto the system. Its recommeded that you run wit these switched off if you do not need this functionality. See below for more information on creating maps for your region / territory.
 *
 * \section sec3 Execution
 * Once the code is built the required files should be installed. There are two method for getting the files to their install locations. Firstly with cmake run:
 * \code
 * $ sudo make install
 * \endcode
 * Secondly you can create the platform specific install bundle and install that.
 * \subsubsection ubuntu-package Ubuntu 22:04
 * \code
 * $ cpack -G DEB
 * $ apt install vivoe-lite-cyclone-ce_<version>_amd64.deb -y
 * \endcode
 * \subsubsection centos-packaage CentOS 8
 * \code
 * $ cpack -G RPM
 * $ dnf install vivoe-lite-cyclone-ce-<version>>.x86_64.rpm  -y
 * \endcode
 * Once installed the executable should be part of your PATH and can be ran from anywhere (/etc/profile.d/vivoe-lite.sh), if you have issues you can run with the full path:
 * \code
 * $ /opt/gva/hmi-display
 * \endcode
 
 * \section sec4 Tooling
 * 
 * Some tools are available for testing the HMI.
 * Tools fall into the command line section and GUI tools:
 * - \subpage gui "GUI tools for testing"
 *
 * - \subpage cli "Command line tools"
 *
 */ 

/*! \page gui GUI tools for testing
 *
 * Lorem ipsum dolor sit amet
 *
 */

/*! \page cli Command line tools?
 *
 * This page is about how to draw a circle.
 * Following sections describe circle:
 * - \ref groupCircleDefinition "Definition of Circle"
 * - \ref groupCircleClass "Circle Class"
 */