#!/bin/sh -e

# An example hook script to verify what is about to be pushed.  Called by "git
# push" after it has checked the remote status, but before anything has been
# pushed.  If this script exits with a non-zero status nothing will be pushed.
#
# This hook is called with the following parameters:
#
# $1 -- Name of the remote to which the push is being done
# $2 -- URL to which the push is being done
#
# If pushing without using a named remote those arguments will be equal.
#
# Information about the commits which are being pushed is supplied as lines to
# the standard input in the form:
#
#   <local ref> <local oid> <remote ref> <remote oid>
#
# This sample shows how to prevent push of commits where the log message starts
# with "WIP" (work in progress).

remote="$1"
url="$2"

if [ ! -z "$MSYSTEM_CHOST" ]; then
   exit 0
fi


$WORKSPACE_ROOT/.githooks/pre-push-doxygen-check
$WORKSPACE_ROOT/.githooks/pre-push-check-linter
$WORKSPACE_ROOT/.githooks/pre-push-check-todo
$WORKSPACE_ROOT/.githooks/pre-push-check-conflict
$WORKSPACE_ROOT/.githooks/pre-push-check-untracked

# --- Safety check
if [ -z "$WORKSPACE_ROOT" ]; then
	echo "Don't run this script from the command line." >&2
	echo " (if you want, you could supply WORKSPACE_ROOT then run" >&2
	echo " WORKSPACE_ROOT=/home/me/repo $0)" >&2
	exit 1
fi

cd $WORKSPACE_ROOT/build
ctest --output-on-failure